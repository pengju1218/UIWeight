apply plugin: 'com.android.library'
// 这里添加下面两行代码。

//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

apply plugin: 'com.github.dcendents.android-maven'
// Your Group
group='com.csdn.weight'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    resourcePrefix "andserver_res_"
    lintOptions {
        abortOnError false
    }

    defaultConfig {
        // applicationId "com.yanzhenjie.andserver.sample" // 这一行要删除，因为library不允许有applicationId。
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName '1.0.2'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
}
dependencies {
    // 如果你的library有依赖别的jar，这里要把jar依赖进来。
    compile fileTree(dir: 'libs', includes: ['*.jar'])
    compile('com.android.support:support-v4:13.0.0')
    compile fileTree(dir: 'libs', include: '*.jar')
    //compile 'com.jsoniter:jsoniter:0.9.2'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    //compile files('libs/android-support-v4.jar')
    //compile fileTree(dir: 'libs', include: '*.jar')
    // compile project(':xDroid')
    // compile 'com.google.android:android:4.1.1.4'
}
/*
// 项目引用的版本号，比如compile 'com.yanzhenjie:andserver:1.0.1'中的1.0.1就是这里配置的。
version = "1.0.0"

// 定义两个链接，下面会用到。
def siteUrl = 'https://github.com/pengju1218/UIWeight' // 项目主页。
def gitUrl = 'https://github.com/pengju1218/UIWeight.git' // Git仓库的url。

// 唯一包名，比如compile 'com.yanzhenjie:andserver:1.0.1'中的com.yanzhenjie就是这里配置的。
group = "com.csdn.Weight"
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'AndServer For Android'// 可选，项目名称。
                description 'The Android build the framework of the Http server.'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'pengju1218' // 开发者的id。
                        name 'pengju1218' // 开发者名字。
                        email 'pengju1218@gmail.com' // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user") // Bintray的用户名。
    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。

    configurations = ['archives']
    pkg {
        repo = "maven"  // 上传到maven库。
        name = "UIlib"  // 发布到Bintray上的项目名字，这里的名字不是compile 'com.yanzhenjie:andserver:1.0.1'中的andserver。
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}*/
apply from: "bintray-publish.gradle"//可以给所有的moudle引入一个配置文件

//apply from:"publish-mevean.gradle"//可以给所有的moudle引入一个配置文件

